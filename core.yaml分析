1] logging
2] peer
3] vm
4] chaincode
5] ledger

--------------------------------------------------------------------------------
fabric v1.0.0 版本
主要包括orderer节点，peer节点
cryptogen configtxgen configtxlator配置运维工具

fabric网络中，需要peer节点，orderer节点，以及通道，组织身份配置文件

节点在启动时，依赖
1] 本地配置文件
2] 环境变量
3] 启动命令的命令行

节点的主配置路径，FABRIC_CFG_PATH指定
默认为/etc/hyperledger/fabric
生产环境建议/var/hyperledger/production

peer节点      $FABRIC_CFG_PATH/core.yaml            配置文件，环境变量，命令行参数           指定peer节点运行时的参数
orderer节点   $FABRIC_CFG_PATH/orderer.yaml         配置文件，环境变量，命令行参数           指定orderer节点运行时的参数

cryptogen     一般依赖crypto-config.yaml            负责生成网络需要的组织结构和身份文件
configtxgen   $FABRIC_CFG_PATH/configtxtx.yaml      负责生成通道需要的配置文件
configtxlator                                       对configtxgen生成的内容进行编码，解码，更新

------------------------------------------------------------------------------------------------
peer配置详解

peer节点启动依赖优先级分别是命令参数，环境变量，配置文件
指派环境变量时，必须以CORE_前缀开头，与配置文件的项对应
例如配置文件中peer.id项对应环境变量CORE_PEER_ID

peer节点默认的配置文件路径为：
$FABRIC_CFG_PATH/core.yaml
搜索不到，则在但前目录./查找
搜索不到，则在/etc/hyperledger/fabric查找
搜索不到，报错

作为练习使用，fabric源码目录fabric/sampleconfig/core.yaml文件作为示例配置文件

该文件包含logging peer vm chaincode ledger部分

-------------------------------------------------------------------
logging部分
主要定义级别，格式

logging:
    peer:       info                peer节点全局的默认日志级别

    cauthdsl:   warning             peer节点内模块的默认日志级别
    gossip:     warning
    ledger:     info
    msp:        warning
    policies:   warning
    grpc:       error

    format: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}'
                                    peer节点全局的默认日志输出格式，其中%{}为变量注入符号，变量后加:号作为变量格式控制


---------------------------------------------------------------------------------------------
peer部分
示例配置内容
peer:
    id: jdoe
    networkId: dev
    listenAddress: 0.0.0.0:7051
    address: 0.0.0.0:7051
    addressAutoDetect: false
    gomaxprocs: -1
    gossip:
        bootstrap: 127.0.0.1:7051
        useLeaderElection: false
        orgLeader: true
        endpoint:
        maxBlockCountToStore: 100
        maxPropagationBurstLatency: 10ms
        maxPropagationBurstSize: 10
        propagateIterations: 1
        propagatePeerNum: 3
        pullInterval: 4s
        pullPeerNum: 3
        requestStateInfoInterval: 4s
        publishStateInfoInterval: 4s
        stateInfoRetentionInterval:
        publishCertPeriod: 10s
        skipBlockVerification: false
        dialTimeout: 3s
        connTimeout: 2s
        recvBuffSize: 20
        sendBuffSize: 200
        digestWaitTime: 1s
        requestWaitTime: 1s
        responseWaitTime: 2s
        aliveTimeInterval: 5s
        aliveExpirationTimeout: 25s
        reconnectInterval: 25s
        externalEndpoint:
        election:
            startupGracePeriod: 15s
            membershipSampleInterval: 1s
            leaderAliveThreshold: 10s
            leaderElectionDuration: 5s
    events:
        address: 0.0.0.0:7053
        buffersize: 100
        timeout: 10ms
    tls:
        enabled:  false
        cert:
            file: tls/server.crt
        key:
            file: tls/server.key
        rootcert:
            file: tls/ca.crt
        serverhostoverride:
    fileSystemPath: /var/hyperledger/production
    BCCSP:
        Default: SW
        SW:
            Hash: SHA2
            Security: 256
            FileKeyStore:
                KeyStore:
    mspConfigPath: msp
    localMspId: DEFAULT
    profile:
        enabled:     false
        listenAddress: 0.0.0.0:6060


1] 通用部分
id                         peer节点在网络中的id信息，用于区别不同的节点
networkId                  网络自身的id，逻辑上可以通过id指定多个隔离的网络
listenAddress              peer节点服务监听的本地地址，当本地有多个网络接口的时候，可以通过该配置指定监听在某个接口上
                           默认为本地所有的网络接口（0.0.0.0）上监听，peer节点服务端口为7051
                           注：接口是指ip，端口是指port
chaincodeListenAddress     链码容器链接的监听地址，不指定的话，那么采用listenAddress指派
                           由于链码容器的连接目前不支持双向TLS认证，所以生产环境中建议指定为不同的地址，用于区别


