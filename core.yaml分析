1] logging
2] peer
3] vm
4] chaincode
5] ledger

--------------------------------------------------------------------------------
fabric v1.0.0 版本
主要包括orderer节点，peer节点
cryptogen configtxgen configtxlator配置运维工具

fabric网络中，需要peer节点，orderer节点，以及通道，组织身份配置文件

节点在启动时，依赖
1] 本地配置文件
2] 环境变量
3] 启动命令的命令行

节点的主配置路径，FABRIC_CFG_PATH指定
默认为/etc/hyperledger/fabric
生产环境建议/var/hyperledger/production

peer节点      $FABRIC_CFG_PATH/core.yaml            配置文件，环境变量，命令行参数           指定peer节点运行时的参数
orderer节点   $FABRIC_CFG_PATH/orderer.yaml         配置文件，环境变量，命令行参数           指定orderer节点运行时的参数

cryptogen     一般依赖crypto-config.yaml            负责生成网络需要的组织结构和身份文件
configtxgen   $FABRIC_CFG_PATH/configtxtx.yaml      负责生成通道需要的配置文件
configtxlator                                       对configtxgen生成的内容进行编码，解码，更新

------------------------------------------------------------------------------------------------
peer配置详解

peer节点启动依赖优先级分别是命令参数，环境变量，配置文件
指派环境变量时，必须以CORE_前缀开头，与配置文件的项对应
例如配置文件中peer.id项对应环境变量CORE_PEER_ID

peer节点默认的配置文件路径为：
$FABRIC_CFG_PATH/core.yaml
搜索不到，则在但前目录./查找
搜索不到，则在/etc/hyperledger/fabric查找
搜索不到，报错

作为练习使用，fabric源码目录fabric/sampleconfig/core.yaml文件作为示例配置文件

该文件包含logging peer vm chaincode ledger部分

-------------------------------------------------------------------
logging部分
主要定义级别，格式

logging:
    peer:       info                peer节点全局的默认日志级别

    cauthdsl:   warning             peer节点内模块的默认日志级别
    gossip:     warning
    ledger:     info
    msp:        warning
    policies:   warning
    grpc:       error

    format: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}'
                                    peer节点全局的默认日志输出格式，其中%{}为变量注入符号，变量后加:号作为变量格式控制


---------------------------------------------------------------------------------------------
peer部分
示例配置内容
peer:
    id: jdoe
    networkId: dev
    listenAddress: 0.0.0.0:7051
    address: 0.0.0.0:7051
    addressAutoDetect: false
    gomaxprocs: -1
    gossip:
        bootstrap: 127.0.0.1:7051
        useLeaderElection: false
        orgLeader: true
        endpoint:
        maxBlockCountToStore: 100
        maxPropagationBurstLatency: 10ms
        maxPropagationBurstSize: 10
        propagateIterations: 1
        propagatePeerNum: 3
        pullInterval: 4s
        pullPeerNum: 3
        requestStateInfoInterval: 4s
        publishStateInfoInterval: 4s
        stateInfoRetentionInterval:
        publishCertPeriod: 10s
        skipBlockVerification: false
        dialTimeout: 3s
        connTimeout: 2s
        recvBuffSize: 20
        sendBuffSize: 200
        digestWaitTime: 1s
        requestWaitTime: 1s
        responseWaitTime: 2s
        aliveTimeInterval: 5s
        aliveExpirationTimeout: 25s
        reconnectInterval: 25s
        externalEndpoint:
        election:
            startupGracePeriod: 15s
            membershipSampleInterval: 1s
            leaderAliveThreshold: 10s
            leaderElectionDuration: 5s
    events:
        address: 0.0.0.0:7053
        buffersize: 100
        timeout: 10ms
    tls:
        enabled:  false
        cert:
            file: tls/server.crt
        key:
            file: tls/server.key
        rootcert:
            file: tls/ca.crt
        serverhostoverride:
    fileSystemPath: /var/hyperledger/production
    BCCSP:
        Default: SW
        SW:
            Hash: SHA2
            Security: 256
            FileKeyStore:
                KeyStore:
    mspConfigPath: msp
    localMspId: DEFAULT
    profile:
        enabled:     false
        listenAddress: 0.0.0.0:6060

---------------------------------------------------------------------------------------
1] 通用部分
id                         peer节点在网络中的id信息，用于区别不同的节点
networkId                  网络自身的id，逻辑上可以通过id指定多个隔离的网络
listenAddress              peer节点服务监听的本地地址，当本地有多个网络接口的时候，可以通过该配置指定监听在某个接口上
                           默认为本地所有的网络接口（0.0.0.0）上监听，peer节点服务端口为7051
                           注：接口是指ip，端口是指port
chaincodeListenAddress     链码容器链接的监听地址，不指定的话，那么采用listenAddress指派
                           由于链码容器的连接目前不支持双向TLS认证，所以生产环境中建议指定为不同的地址，用于区别
address                    peer节点服务对外的地址，特别是当服务运行在NAT设备时，该配置可以指定服务对外提供的可访问的地址
addressAutoDetect          是否自动探测服务地址，当peer节点服务运行环境的地址是动态的情况时，该配置可以进行自动探测
                           探测将内部地址作为peer服务的地址，该配置的默认值是关闭的
                           注：启用TLS配置情况下，该选项必须关闭，避免与指定的域名发生冲突，造成认证失败
gomaxprocs                 配置运行该Go应用的最大进程数量，runtime.GOMAXPROCS(n)，默认值-1，表示使用系统默认配置，可以不进行修改
fileSystemPath             本地数据存放路径，包括账本，链码，一般指定的路径为/var/hyperledger/production
BCCSP                      BlockChain Cryptographic Service Provider，密码库相关配置，包括算法，文件路径
mspConfigPath              MSP目录所在的路径，可以为绝对路径，或者相对于配置目录的路径，一般建议为/etc/hyperledger/fabric/msp
localMspId                 peer所关联的MSP的ID，一般为组织单位名称，需要与联盟配置中的名称一致
profile                    是否启用Go自带的profiling支持进行调试，生产环境下需要关闭

示例
peer:
  id: peer0                                    节点ID
  networkId: business                          网络的ID
  listenAddress: 0.0.0.0:7051                  节点在监听的本地网络接口地址
  chaincodeListenAddress: 0.0.0.0:7052         链码容器连接时的监听地址
  address: 0.0.0.0:7051                        peer节点对外的服务地址
  addressAutoDetect: false                     是否自动探测对外服务地址
  
  gomaxprocs: -1                               Go进程数量限制
  fileSystemPath: /var/hyperledger/production  本地数据存放路径

  BCCSP:                                       加密库的配置
    Default: SW                                软件模式
    SW:                                        软件模式
      Hash: SHA2                               Hash算法类型，目前仅支持SHA2
      Security: 256                            安全级别64字长
      FileKeyStore:                            本地私钥文件路径，默认指向<mspConfigPath>/keystore
      KeyStore:                                密钥文件

  mspConfigPath: msp                           MSP的本地路径
  localMspId: DEFAULT                          peer所关联的MSP的ID

  profile:                                     是否启用Go自带的profiling进行调试
    enabled: false                             是否开启
    listenAddress: 0.0.0.0:6060                监听接口

-------------------------------------------------------------------------
2] gossip
gossip，说三道四，四通八达
职责：负责orderer，peer节点之间，通过gossip消息，进行p2p通信

2.1] 启动和连接参数
bootstrap                               启动节点后向那些节点发起gossip连接，用于加入网络，要求这些节点与本地节点需要属于同一组织
endpoint                                本节点在同一组织内的gossip id，默认为peer.address值
maxBlockCountToStore                    保存到内存中的区块个数上线，如果超过上限则丢弃
skipBLockVerification                   是否不对区块消息校验，默认取值为false
dialTimeout                             gRPC连接拨号的超时
connTimeout                             建立连接的超时
aliveTimeInterval                       定期发送Alive心跳消息的时间间隔
aliveExpirationTimeout                  Alive心跳消息的超时时间
reconnectInterval                       连接断开后重新建立连接的尝试时间间隔
externalEndpoint                        本节点被组织外的节点感知时的地址，默认为空值，表示不允许被其他组织感知

2.2] 消息
maxPropagationBurstLatency              保存消息/消息驻留的最大时间，超过该时间，那么触发转发消息给其他节点
maxPropagationBurstSize                 保存消息/消息驻留的最大数量，超过该数量，那么触发转发消息给其他节点
propagateIterations                     节点不限制，同一消息的消息转发的次数
propagatePeerNum                        指示推送消息给指定个数的节点，规定为节点的数量
pullInterval                            拉取消息的时间间隔
pullPeerNum                             指示允许从指定个数的节点拉取消息
requestStateInfoInterval                从节点拉取状态信息，StateInfo，消息的时间间隔
publishStateInfoInterval                向其他节点推送状态信息，StateInfo，消息的时间间隔
stateInfoRetentionInterval              状态信息,StateInfo，消息的超时时间
publishCertPeriod                       节点启动后，在消息类型为心跳消息中嵌入证书的等待时间
recvBuffSize                            本节点收取消息的允许的缓存大小
sendBuffSize                            本节点发送消息的允许的缓存大小
digestWaitTime                          本节点处理摘要数据的等待时间
requestWaitTime                         本节点处理nonce数据的等待时间，nonce随机数在HTTPS中作为协商时挑战使用值
responseWaitTime                        本节点处理，终止拉取数据，处理的等待时间

2.3] 选举
 

