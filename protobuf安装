wget https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protobuf-all-3.6.1.tar.gz

sudo apt install -y autoconf automake libtool curl make g++ unzip

tar -xvf protobuf-all-3.6.1.tar.gz
cd protobuf-3.6.1
sudo mkdir -p /usr/local/protobuf
./configure --prefix=/usr/local/protobuf
make
make check
sudo make install

cd /etc/ld.so.conf.d/
/usr/local/protobuf/lib
ldconfig

sudo ln -s /usr/local/protobuf/bin/protoc /usr/local/bin/protoc
protoc --version

----------------------------------------
官方安装和使用步骤
https://github.com/grpc/grpc-go

    go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
    https_proxy=socks5://127.0.0.1:10888 go get -u google.golang.org/grpc
    sudo ln -s /home/michael/go/bin/protoc-gen-go /usr/local/bin/protoc-gen-go
    protoc --go_out=plugins=grpc:. *.proto

----------------------------------------

注意：$GOPATH/bin下面的binary都可以通过两种方式随处可用
1] 加入$PATH环境变量，修改到.bashrc，然后$ source ~/.bashrc
2] 逐个ln -s $GOPATH/bin/* /usr/local/bin/*，然后sudo chmod a+x /usr/local/bin/*
3] go get -u 或者非-u，本质是下载整个github.com仓库代码，例如下载了google.golang.org/grpc代码
   可以在$GOPATH/src/google.golang.org/查看，本文需要练习的hello也在$GOPATH/src/google.golang.org/grpc/examples/helloworld/

----------------------------------------
直接下载使用hello示例，可通过官方指示
https_proxy=socks5://127.0.0.1:10888 go get -u google.golang.org/grpc/examples/helloworld/greeter_client
https_proxy=socks5://127.0.0.1:10888 go get -u google.golang.org/grpc/examples/helloworld/greeter_server

go get -u 命令能够自动区别是源码、二进制，还是包，也就是在$GOPATH的bin pkg src三个目录的区别

拉起服务
greeter_server &
每次执行一次client看效果
greeter_client

----------------------------------------
编译hello的示例做法，可通过官方指示
1] 安装protobuf的c++编译器，之上有构建步骤
2] go get -u github.com/golang/protobuf/protoc-gen-go
3] go generate google.golang.org/grpc/examples/helloworld/...
